import os;
import sys;
import magic;


class Dataset:
    """Main class"""
    def __init__(self,path):
        """Main constructor"""
        self.path = path
        self.file_stats = {}
        self.names = []
        self.totalsize = 0
        self.totdirs = 0
        self.totalfiles = 0
        self.filetype_nil_count=0
        path_iter = os.scandir(self.path)
        for entry in path_iter:
            self._process_entry(entry)
        for type in self.file_stats:
            val = self.file_stats[type]
            val['avg'] = val['tot_size'] // val['count']  
    def _process_entry(self, entry):
        self.names.append(entry.name)
        self.totalsize += entry.stat().st_size
        if entry.is_file():
            self.totalfiles += 1
        elif entry.is_dir():
            self.totdirs+=1
        if entry.is_file():
            result=magic.from_file(entry.path)
            self.filestats[result]={"avg":0, "tot_size":0, "count":0}

        

    def __str__(self):
        
        return """Dataset Path: {path} tot size(MB): {totsize}
            tot dirs: {totdirs} tot files: {totfiles}
            nil_file_type count: {nilcount}
            file stats: {stats}""".format(path = self.path, 
                                                    
            totsize = (self.totalsize // (1024*1024)),
            totdirs = self.totdirs,
            totfiles = self.totalfiles,
            nilcount = self.filetype_nil_count,
            stats = self.file_stats
        )
        

#instantiate

if __name__ == '__main__':
    print(sys.argv)
    if len(sys.argv) < 2:
        sys.exit('Usage: python self.py path')

    path = sys.argv[1]
    obj = Dataset(path)
    print(obj)
